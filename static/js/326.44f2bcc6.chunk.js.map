{"version":3,"file":"static/js/326.44f2bcc6.chunk.js","mappings":"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","sources":["common/Button/styles.ts","common/Button/index.tsx","components/ContentBlock/LeftContentBlock/styles.ts","components/ContentBlock/LeftContentBlock/index.tsx","components/ContentBlock/RightContentBlock/styles.ts","components/ContentBlock/RightContentBlock/index.tsx","components/ContentBlock/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledButton = styled(\"button\")<any>`\r\n  background: ${(p) => p.color || \"#2e186a\"};\r\n  color: ${(p) => (p.color ? \"#2E186A\" : \"#fff\")};\r\n  font-size: 1rem;\r\n  font-weight: 700;\r\n  width: 100%;\r\n  border: 1px solid #edf3f5;\r\n  border-radius: 4px;\r\n  padding: 13px 0;\r\n  cursor: pointer;\r\n  margin-top: 0.625rem;\r\n  max-width: 180px;\r\n  transition: all 0.3s ease-in-out;\r\n  box-shadow: 0 16px 30px rgb(23 31 114 / 20%);\r\n\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    color: #fff;\r\n    border: 1px solid rgb(255, 130, 92);\r\n    background-color: rgb(255, 130, 92);\r\n  }\r\n`;\r\n","import { StyledButton } from \"./styles\";\r\nimport { ButtonProps } from \"../types\";\r\n\r\nexport const Button = ({\r\n  color,\r\n  fixedWidth,\r\n  children,\r\n  onClick,\r\n}: ButtonProps) => (\r\n  <StyledButton color={color} fixedWidth={fixedWidth} onClick={onClick}>\r\n    {children}\r\n  </StyledButton>\r\n);\r\n","import styled from \"styled-components\";\r\n\r\nexport const LeftContentSection = styled(\"section\")`\r\n  position: relative;\r\n  padding: 10rem 0 8rem;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 4rem 0 4rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 575px) {\r\n    padding-top: 4rem;\r\n  }\r\n`;\r\n\r\nexport const ServiceWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n`;\r\n\r\nexport const MinTitle = styled(\"h6\")`\r\n  font-size: 15px;\r\n  line-height: 1rem;\r\n  padding: 0.5rem 0;\r\n  text-transform: uppercase;\r\n  color: #000;\r\n  font-family: \"Motiva Sans Light\", sans-serif;\r\n`;\r\n\r\nexport const MinPara = styled(\"p\")`\r\n  font-size: 13px;\r\n`;\r\n","import { Row, Col } from \"antd\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { SvgIcon } from \"../../../common/SvgIcon\";\r\nimport { ContentBlockProps } from \"../types\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport {\r\n  LeftContentSection,\r\n  Content,\r\n  ContentWrapper,\r\n  ServiceWrapper,\r\n  MinTitle,\r\n  MinPara,\r\n} from \"./styles\";\r\n\r\nconst LeftContentBlock = ({\r\n  icon,\r\n  title,\r\n  content,\r\n  section,\r\n  t,\r\n  id,\r\n}: ContentBlockProps) => {\r\n  return (\r\n    <LeftContentSection>\r\n      <Fade>\r\n        <Row justify=\"space-between\" align=\"middle\" id={id}>\r\n          <Col lg={11} md={11} sm={12} xs={24}>\r\n            <SvgIcon src={icon} width=\"100%\" height=\"100%\" />\r\n          </Col>\r\n          <Col lg={11} md={11} sm={11} xs={24}>\r\n            <ContentWrapper>\r\n              <h6>{t(title)}</h6>\r\n\t      {typeof content === \"object\" &&\r\n\t         content.map((item: any, id: number) => {\r\n\t\t return (\r\n\t\t \t<Content> {item.content} </Content>\r\n\t\t\t);\r\n\t\t\t})}\r\n              <ServiceWrapper>\r\n                <Row justify=\"space-between\">\r\n                  {typeof section === \"object\" &&\r\n                    section.map((item: any, id: number) => {\r\n                      return (\r\n                        <Col key={id} span={11}>\r\n                          <SvgIcon src={item.icon} width=\"60px\" height=\"60px\" />\r\n                          <MinTitle>{t(item.title)}</MinTitle>\r\n                          <MinPara>{t(item.content)}</MinPara>\r\n                        </Col>\r\n                      );\r\n                    })}\r\n                </Row>\r\n              </ServiceWrapper>\r\n            </ContentWrapper>\r\n          </Col>\r\n        </Row>\r\n      </Fade>\r\n    </LeftContentSection>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(LeftContentBlock);\r\n","import styled from \"styled-components\";\r\n\r\nexport const RightBlockContainer = styled(\"section\")`\r\n  position: relative;\r\n  padding: 10rem 0 8rem;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 8rem 0 6rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    padding: 4rem 0 3rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const ButtonText = styled(\"p\")`\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 575px) {\r\n    padding-bottom: 4rem;\r\n  }\r\n`;\r\n\r\nexport const ButtonWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    max-width: 80%;\r\n  }\r\n\r\n  button:last-child {\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n","import { Row, Col } from \"antd\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { SvgIcon } from \"../../../common/SvgIcon\";\r\nimport { Button } from \"../../../common/Button\";\r\nimport { ContentBlockProps } from \"../types\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport {\r\n  RightBlockContainer,\r\n  Content,\r\n  ContentWrapper,\r\n  ButtonWrapper,\r\n} from \"./styles\";\r\n\r\nimport {pdfFile} from \"/content/Resume/resume.pdf\"\r\n\r\nimport React, {useCallback} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nconst RightBlock = ({\r\n  title,\r\n  content,\r\n  button,\r\n  icon,\r\n  t,\r\n  id,\r\n}: ContentBlockProps) => {\r\n\r\nconst history = useHistory();\r\n\r\n\r\n\r\n  \r\n  const scrollTo = (id: string) => {\r\n    const element = document.getElementById(id) as HTMLDivElement;\r\n    element.scrollIntoView({\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n  return (\r\n    <RightBlockContainer>\r\n      <Fade>\r\n        <Row justify=\"space-between\" align=\"middle\" id={id}>\r\n          <Col lg={11} md={11} sm={11} xs={24}>\r\n            <ContentWrapper>\r\n              <h6>{t(title)}</h6>\r\n\t      \t      {typeof content === \"object\" &&\r\n\t         content.map((item: any, id: number) => {\r\n\t\t return (\r\n\t\t \t<Content> {item.content} </Content>\r\n\t\t\t);\r\n\t\t\t})}\r\n              <ButtonWrapper>\r\n                {typeof button === \"object\" &&\r\n                  button.map((item: any, id: number) => {\r\n                    return (\r\n                      <Button\r\n                        key={id}\r\n                        color={item.color}\r\n                        fixedWidth={true}\r\n                        onClick={() => history.push(item.onClick)}\r\n                      >\r\n                        {t(item.title)}\r\n                      </Button>\r\n                    );\r\n                  })}\r\n              </ButtonWrapper>\r\n            </ContentWrapper>\r\n          </Col>\r\n          <Col lg={11} md={11} sm={12} xs={24}>\r\n            <SvgIcon src={icon} width=\"100%\" height=\"100%\" />\r\n          </Col>\r\n        </Row>\r\n      </Fade>\r\n    </RightBlockContainer>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(RightBlock);\r\n","import LeftContentBlock from \"./LeftContentBlock\";\r\nimport RightContentBlock from \"./RightContentBlock\";\r\nimport { ContentBlockProps } from \"./types\";\r\n\r\nconst ContentBlock = (props: ContentBlockProps) => {\r\n  if (props.type === \"left\") return <LeftContentBlock {...props} />;\r\n  if (props.type === \"right\") return <RightContentBlock {...props} />;\r\n  return null;\r\n};\r\n\r\nexport default ContentBlock;\r\n"],"names":["StyledButton","styled","p","color","Button","fixedWidth","children","onClick","LeftContentSection","Content","ContentWrapper","ServiceWrapper","MinTitle","MinPara","withTranslation","icon","title","content","section","t","id","justify","align","lg","md","sm","xs","SvgIcon","src","width","height","map","item","span","RightBlockContainer","ButtonWrapper","button","history","useHistory","push","props","type","RightContentBlock"],"sourceRoot":""}